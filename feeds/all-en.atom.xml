<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>XMPP</title><link href="/" rel="alternate"></link><link href="/feeds/all-en.atom.xml" rel="self"></link><id>/</id><updated>2015-03-11T00:00:00+01:00</updated><entry><title>This is yet another test post</title><link href="/posts/blog/2015/Mar/11/this-is-yet-another-test-post" rel="alternate"></link><updated>2015-03-11T00:00:00+01:00</updated><author><name>Guilherme</name></author><id>tag:,2015-03-11:posts/blog/2015/Mar/11/this-is-yet-another-test-post</id><summary type="html">&lt;p&gt;More text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text...&lt;/p&gt;
&lt;p&gt;Even more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text, more text...&lt;/p&gt;</summary></entry><entry><title>Example learn post</title><link href="/posts/learn/2015/Jan/26/example-learn-post" rel="alternate"></link><updated>2015-01-26T00:00:00+01:00</updated><author><name>Adam</name></author><id>tag:,2015-01-26:posts/learn/2015/Jan/26/example-learn-post</id><summary type="html">&lt;p&gt;Here's a post to the learn post series&lt;/p&gt;
&lt;p&gt;Testing testing&lt;/p&gt;</summary></entry><entry><title>Here's a post that's written in markdown</title><link href="/posts/blog/2015/Jan/26/heres-a-post-thats-written-in-markdown" rel="alternate"></link><updated>2015-01-26T00:00:00+01:00</updated><author><name>Laura</name></author><id>tag:,2015-01-26:posts/blog/2015/Jan/26/heres-a-post-thats-written-in-markdown</id><summary type="html">&lt;p&gt;Testing this out to see if it works.&lt;/p&gt;
&lt;p&gt;Does it work?&lt;/p&gt;</summary></entry><entry><title>It's all about choices and control</title><link href="/posts/blog/2015/Jan/26/its-all-about-choices-and-control" rel="alternate"></link><updated>2015-01-26T00:00:00+01:00</updated><author><name>Laura</name></author><id>tag:,2015-01-26:posts/blog/2015/Jan/26/its-all-about-choices-and-control</id><summary type="html">&lt;p&gt;“Why should I use XMPP?” is a question we get asked a lot. Our answer is often technically-focussed, as there are plenty of reasons XMPP might be the right choice, or we might explain about the benefits of a federated approach – where everyone can run their own server and control their own data. Either way, the fact it is an ‘open standard’ never ceases to be mentioned.&lt;/p&gt;
&lt;p&gt;Open standards have many advantages over proprietary formats (too many to list in one blog post) but one in particular is that it gives you the choices and control about how you access your data and services.&lt;/p&gt;
&lt;p&gt;For example (get ready for the analogies) imagine you are an individual accessing someone else’s XMPP service. Because XMPP is built on open standards, you get to choose what applications you use to connect to their system; for example, a mobile phone provider does not mandate that to use their services you must use a specific handset – the choice is yours). Your provider may have one that they prefer, or offer, but there are myriad other XMPP applications – the choice remains yours and you can make that choice based on your individual preferences and requirements.&lt;/p&gt;
&lt;p&gt;Even better, if a new project implements a better XMPP client than the one you are currently using, firstly, that project is able to do so, and secondly – you are free to start using it! Back to our phone analogy, imagine if a new mobile handset came out that was even better than the one you had chosen, and you could just pop your sim card out of the old phone and straight into the new one… no hassle, but a much better service for you.&lt;/p&gt;
&lt;p&gt;And if you have particular needs not being met by existing clients, you are freely able to implement your own or to extend any of the open source options to meet those requirements. The power is all yours.&lt;/p&gt;
&lt;p&gt;This is a critically important difference between open standards (like XMPP) and access to proprietary systems – if you use a proprietary system, the operator is in control of how you access the service; and on a whim they could choose to shut down your choice of third-party clients. Using our phone analogy, this is like your mobile service provider controlling which handsets you can use, and on a whim deciding that they have 1 choice and only than handset can be used from now on. In this situation you might find yourself unable to access your data in a useful way. A proprietary system may also release a new version of the client that you don’t like or that doesn’t run on your systems; if they force upgrades you may no longer be able to access the systems or your data. As you can see, the choice isn’t really yours.&lt;/p&gt;
&lt;p&gt;Alternatively, imagine you are an organisation running an internal service. You might choose to use a cloud provider, in which case the advantages of choosing a vendor using open standards is the same as above. You might also want to apply organisational policies to your internal service; here again, open standards like XMPP are a good choice. They ensure that you can choose the client you need, not the client the vendor of a proprietary system wants you to use. An open-standards system even ensures (with the ability to export your data) the option to migrate from one server provider to another using mechanisms defined for XMPP servers. When its your systems, it should be your choice.&lt;/p&gt;
&lt;p&gt;These advantages also apply to third-party developers – developing for XMPP gives you a level playing field and you’re free to implement your client, server, library, or component according to the standards; you don’t run the risk of being locked out of the systems for which you’re developing, either by unpublished protocol changes or by legal action. And if you think the protocols can be better, you can even contribute to the open standards process and make improvements you need.&lt;/p&gt;
&lt;p&gt;Using open standards matters whenever your choices are important to you, be it today or tomorrow. And that is why you should use XMPP.&lt;/p&gt;</summary></entry></feed>